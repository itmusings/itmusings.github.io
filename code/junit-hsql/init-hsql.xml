<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:jd="http://www.springframework.org/schema/jdbc"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:context="http://www.springframework.org/schema/context"
	 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    
	 <!-- Below configuration has been added to enable in memory DB HSQLDB  -->
	 <jd:embedded-database id="dataSource" type="HSQL">
	 </jd:embedded-database>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
              <props>
              	<!--  Script file needs to be supplied. This file allows for 
              	any data initialization that may be required by the test cases. -->
                  <prop key="hibernate.hbm2ddl.import_files">${script.file}</prop>
                  <!--  use the hbm files to generate the database schema
                  automatically. This is very useful since it avoids having 
                  to use a separate schema file and keeping it updated if the 
                  schema changes.
                  Changes in schema would be automatically inferred from the hbm files.
                   -->
                  <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
              </props>
        </property>
        <property name="configLocation" value="classpath:hibernate.cfg-junit.xml" />
        <property name="mappingResources" value="${mapping.resources}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id='transactionTemplate' class='org.springframework.transaction.support.TransactionTemplate'>
    	<constructor-arg ref="transactionManager"/>
    </bean>
</beans>